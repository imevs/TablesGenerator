{"version":3,"sources":["Form.tsx","Table.tsx","mockedData.ts","TablesStore.ts","App.tsx","index.tsx","Table.module.css","Form.module.css","App.module.css"],"names":["listOfCities","usePropertyBinding","initialValue","propName","useState","fieldState","setFieldState","onFieldChange","useCallback","event","target","value","onFieldFocus","setPlaceholder","onFieldBlur","placeholder","FillingForm","props","data","name","nameState","onNameChange","resetNameState","namePlaceholder","onNameFocus","onNameBlur","surname","surNameState","onSurNameChange","resetSurNameState","surnamePlaceholder","onSurNameFocus","onSurNameBlur","age","ageState","onAgeChange","resetAgeState","agePlaceholder","onAgeFocus","onAgeBlur","city","cityState","onCityChange","resetCityState","cityPlaceholder","onCityFocus","onCityBlur","isFormValid","every","f","confirmIsExpected","setConfirmIsExpected","onSave","e","needConfirmation","trim","parseFloat","isRemoved","preventDefault","className","styles","fillingForm","onSubmit","formElement","type","minLength","required","onChange","onFocus","onBlur","min","list","id","map","confirmButton","disabled","submitButton","PopupForm","popup","DEFAULT_TABLE_INDEX","Table","rowsRange","Object","keys","emptyRowsCount","Math","abs","length","emptyRowsRange","Array","fill","v","i","String","tableContainer","tableHeader","tableHeader__button_copy","onClick","copyTable","tableIndex","title","tableHeader__button_remove","removeTable","tableContent","tableContent__header","rowId","activeRecord","tableContent__row_selected","tableContent__row_removed","tableContent__link","tableContent__link_blue","cancelRemovingRow","editRow","tableContent__link_red","removeRow","mockedTablesPositions","mockedData","TablesStore","tables","tableIds","updateTablesData","genTableId","markAsRemovedRow","infoToUpdate","tableToUpdate","updatePersonInfo","addPerson","getUniqueString","Date","now","toString","prevTableId","newId","this","prevIndex","indexOf","splice","filter","undefined","subscriber","callback","App","state","selectedPerson","selectedRow","selectedTable","removedTable","removingTable","removeTimeoutIds","popupRef","React","createRef","store","setState","setTimeout","window","confirm","clearInterval","clearCurrent","handleClickOutsideOfPopup","current","contains","handleEscape","key","localStorage","setItem","JSON","stringify","document","addEventListener","subscribe","tablePositions","positionsData","getItem","parse","console","error","removeEventListener","InputWidget","getTableIds","TableWidget","RemovedTable","RemovingTable","ref","Component","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9e0c100c.chunk.js","sourcesContent":["import React, { ChangeEvent, FormEvent, useCallback, useState } from \"react\";\n\nimport styles from \"./Form.module.css\";\nimport { Person } from \"./commonTypes\";\n\nconst listOfCities = [\"Riga\", \"Cesis\", \"Daugavpils\"];\n\ntype FillingFormProps = {\n    needConfirmation?: boolean;\n    data?: Person;\n    onSave: (data: Person) => void;\n};\n\nfunction usePropertyBinding<T extends (number | string | undefined)>(initialValue: T, propName: string): [\n    T, (event: ChangeEvent) => void, () => void, string | undefined, () => void, () => void,\n] {\n    const [fieldState, setFieldState] = useState(initialValue);\n    const onFieldChange = useCallback((event) => { setFieldState(event.target.value); }, []);\n    const onFieldFocus = useCallback(() => { setPlaceholder(\"\"); }, []);\n    const onFieldBlur = useCallback(() => {\n        setPlaceholder(propName + \" (is required field)\"); }, [propName]);\n    const [placeholder, setPlaceholder] = useState(propName);\n    const resetField = useCallback(() => {\n        setPlaceholder(propName);\n        setFieldState(initialValue);\n    }, [propName, initialValue]);\n\n    return [fieldState, onFieldChange, resetField, placeholder, onFieldFocus, onFieldBlur];\n}\n\nexport function FillingForm(props: FillingFormProps) {\n    const [nameState, onNameChange, resetNameState, namePlaceholder, onNameFocus, onNameBlur] =\n        usePropertyBinding(props.data?.name ?? \"\", \"Name\");\n\n    const [surNameState, onSurNameChange, resetSurNameState, surnamePlaceholder, onSurNameFocus, onSurNameBlur] =\n        usePropertyBinding(props.data?.surname ?? \"\", \"Surname\");\n\n    const [ageState, onAgeChange, resetAgeState, agePlaceholder, onAgeFocus, onAgeBlur] =\n        usePropertyBinding(props.data?.age ?? \"\", \"Age\");\n\n    const [cityState, onCityChange, resetCityState, cityPlaceholder, onCityFocus, onCityBlur] =\n        usePropertyBinding(props.data?.city ?? \"\", \"City\");\n\n    const isFormValid = [nameState, surNameState, ageState, cityState].every(f => f !== \"\");\n\n    const [confirmIsExpected, setConfirmIsExpected] = useState(false);\n\n    const onSave = useCallback((e: FormEvent) => {\n        if (props.needConfirmation && !confirmIsExpected) {\n            setConfirmIsExpected(true);\n        } else {\n            setConfirmIsExpected(false);\n            props.onSave({\n                    name: nameState.trim(),\n                    surname: surNameState.trim(),\n                    age: typeof ageState === \"string\"\n                        ? (ageState === \"\" ? 0 : parseFloat(ageState))\n                        : ageState,\n                    city: cityState.trim(),\n                    isRemoved: false,\n                },\n            );\n            resetNameState();\n            resetSurNameState();\n            resetAgeState();\n            resetCityState();\n        }\n        e.preventDefault();\n    }, [nameState, surNameState, ageState, cityState, confirmIsExpected,\n        resetAgeState, resetCityState, resetNameState, resetSurNameState, props]);\n\n    return <form className={styles.fillingForm} onSubmit={onSave}>\n        <p>\n            <input\n                className={styles.formElement}\n                placeholder={namePlaceholder}\n                type=\"text\"\n                value={nameState}\n                minLength={1}\n                required\n                onChange={onNameChange}\n                onFocus={onNameFocus}\n                onBlur={onNameBlur}\n            />\n        </p>\n        <p>\n            <input\n                className={styles.formElement}\n                placeholder={surnamePlaceholder}\n                type=\"text\"\n                value={surNameState}\n                minLength={1}\n                required\n                onChange={onSurNameChange}\n                onFocus={onSurNameFocus}\n                onBlur={onSurNameBlur}\n            />\n        </p>\n        <p>\n            <input\n                className={styles.formElement}\n                placeholder={agePlaceholder}\n                type=\"number\"\n                value={ageState}\n                required\n                min={0}\n                onChange={onAgeChange}\n                onFocus={onAgeFocus}\n                onBlur={onAgeBlur}\n            />\n        </p>\n        <p>\n            <input\n                className={styles.formElement}\n                required\n                value={cityState}\n                onChange={onCityChange}\n                placeholder={cityPlaceholder}\n                list=\"citiesList\"\n                onFocus={onCityFocus}\n                onBlur={onCityBlur}\n            />\n            <datalist id=\"citiesList\">{listOfCities.map((city) =>\n                (<option key={city} value={city}>{city}</option>))}</datalist>\n        </p>\n        {confirmIsExpected\n            ? <button className={styles.confirmButton} type=\"submit\" disabled={!isFormValid}>\n                Agree\n            </button>\n            : <button className={styles.submitButton} type=\"submit\" disabled={!isFormValid}>\n                {props.data ? \"Update\" : \"Add\"}\n            </button>\n        }\n    </form>;\n}\n\nexport function PopupForm(props: FillingFormProps) {\n    if (!props.data) {\n        return null;\n    }\n    return <div className={styles.popup}>\n        <FillingForm  {...props} needConfirmation={true} />\n    </div>;\n}\n","import React from \"react\";\n\nimport { TableRows } from \"./commonTypes\";\n\nimport styles from \"./Table.module.css\";\n\ntype TableProps = {\n    tableIndex: string;\n    data: TableRows;\n    activeRecord: string | undefined;\n    copyTable: (tableIndex: string) => void;\n    removeTable: (tableIndex: string) => void;\n    editRow: (tableIndex: string, rowId: string) => void;\n    removeRow: (tableIndex: string, rowId: string) => void;\n    cancelRemovingRow: (tableIndex: string, rowId: string) => void;\n}\n\n// The table with this index could not be removed\nexport const DEFAULT_TABLE_INDEX = \"0\";\n\nexport function Table(props: TableProps) {\n    const maxEmptyRows = 10;\n    const rowsRange = Object.keys(props.data);\n    const emptyRowsCount = Math.abs(maxEmptyRows - rowsRange.length);\n    const emptyRowsRange = (new Array(emptyRowsCount)).fill(0).map((v, i) => String(i));\n    return <div className={styles.tableContainer}>\n        <div className={styles.tableHeader}>\n            <button\n                className={styles.tableHeader__button_copy}\n                onClick={() => props.copyTable(props.tableIndex)}\n            >Copy table\n            </button>\n            {props.tableIndex !== DEFAULT_TABLE_INDEX &&\n            <button\n                title=\"Remove table\"\n                className={styles.tableHeader__button_remove}\n                onClick={() => props.removeTable(props.tableIndex)}\n            >X</button>}\n        </div>\n        <table className={styles.tableContent}>\n            <thead>\n            <tr className={styles.tableContent__header}>\n                <th>Name</th>\n                <th>Surname</th>\n                <th>Age</th>\n                <th>City</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {rowsRange.map((rowId) => (\n                <tr key={rowId}\n                    className={\n                        (props.activeRecord === rowId ? styles.tableContent__row_selected : \"\") +\n                        (props.data[rowId]?.isRemoved ? styles.tableContent__row_removed : \"\")\n                    }\n                >\n                    <td>{props.data[rowId]?.name}</td>\n                    <td>{props.data[rowId]?.surname}</td>\n                    <td>{props.data[rowId]?.age}</td>\n                    <td>{props.data[rowId]?.city}</td>\n                    <td>\n                        {props.data[rowId] && props.data[rowId].isRemoved\n                        && <button\n                            className={styles.tableContent__link + \" \" + styles.tableContent__link_blue}\n                            onClick={() => props.cancelRemovingRow(props.tableIndex, rowId)}>\n                            Restore (item will be removed in 5s)\n                        </button>}\n                        {props.data[rowId] && !props.data[rowId].isRemoved && <>\n                            <button\n                                className={styles.tableContent__link + \" \" + styles.tableContent__link_blue}\n                                onClick={() => props.editRow(props.tableIndex, rowId)}\n                            >Edit\n                            </button>\n                            <button\n                                className={styles.tableContent__link + \" \" + styles.tableContent__link_red}\n                                onClick={() => props.removeRow(props.tableIndex, rowId)}>\n                                Delete\n                            </button>\n                        </>}\n                    </td>\n                </tr>))}\n            {emptyRowsRange.map((rowId) => (<tr key={\"empty\" + rowId}><td /><td /><td /><td /><td /></tr>))}\n            </tbody>\n        </table>\n    </div>;\n}\n","import { DEFAULT_TABLE_INDEX } from \"./Table\";\nimport { TableRows } from \"./commonTypes\";\n\nexport const mockedTablesPositions = [DEFAULT_TABLE_INDEX, \"1637496942500\", \"1637496971989\", \"1637496924975\"];\nexport const mockedData: Record<string, TableRows> = {\n    [DEFAULT_TABLE_INDEX]: {\n        \"0\": {\n            name: \"Michael\",\n            surname: \"Galeota\",\n            age: 30,\n            city: \"Riga\"\n        },\n        \"2\": {\n            name: \"Jacques\",\n            surname: \"Galipeau\",\n            age: 50,\n            city: \"Riga\"\n        },\n    },\n    \"1637496942500\": {\n        \"0\": {\n            name: \"Michael\",\n            surname: \"Galeota\",\n            age: 30,\n            city: \"Riga\"\n        },\n        \"2\": {\n            name: \"Jacques\",\n            surname: \"Galipeau\",\n            age: 50,\n            city: \"Riga\"\n        },\n    },\n    \"1637496971989\": {\n        \"0\": {\n            name: \"Michael\",\n            surname: \"Galeota\",\n            age: 30,\n            city: \"Riga\"\n        },\n    },\n    \"1637496924975\": {\n        \"1\": {\n            name: \"Michael\",\n            surname: \"Galeota\",\n            age: 30,\n            city: \"Riga\"\n        },\n        \"2\": {\n            name: \"Don\",\n            surname: \"Gallagher\",\n            age: 54,\n            city: \"Riga\"\n        },\n    },\n};","import { Person, TableRows } from \"./commonTypes\";\nimport { DEFAULT_TABLE_INDEX } from \"./Table\";\n\nexport class TablesStore {\n\n    private tables: Record<string, TableRows> = {};\n    public tableIds: string[] = [DEFAULT_TABLE_INDEX];\n\n    private subscriber(data: Record<string, TableRows>, tableIds: string[]) {}\n\n    public copyTable = (tableIndex: string) => {\n        const data = this.tables[tableIndex];\n        this.updateTablesData({ ...this.tables, [this.genTableId(tableIndex)]: data });\n    }\n\n    public getUniqueString() {\n        return Date.now().toString();\n    }\n\n    public genTableId(prevTableId: string) {\n        const newId = this.getUniqueString();\n        const prevIndex = this.tableIds.indexOf(prevTableId);\n        this.tableIds.splice(prevIndex + 1, 0, newId);\n        return newId;\n    }\n\n    public getTableIds() {\n        return this.tableIds.filter(id => this.tables[id] !== undefined);\n    }\n\n    public removeTable = (tableIndex: string) => {\n        const tables = { ...this.tables };\n        delete tables[tableIndex];\n        this.updateTablesData(tables);\n    }\n\n    public markAsRemovedRow = (tableIndex: string, rowId: string) => {\n        const tables = this.tables;\n        const infoToUpdate = { ...tables[tableIndex][rowId] };\n        infoToUpdate.isRemoved = true;\n        this.updateTablesData({\n            ...tables, [tableIndex]: { ...tables[tableIndex], [rowId]: infoToUpdate }\n        });\n    }\n\n    public removeRow = (tableIndex: string, rowId: string) => {\n        const tables = this.tables;\n        const tableToUpdate = { ...tables[tableIndex] };\n        delete tableToUpdate[rowId];\n        this.updateTablesData({ ...tables, [tableIndex]: { ...tableToUpdate } });\n    }\n\n    public cancelRemovingRow = (tableIndex: string, rowId: string) => {\n        const tables = this.tables;\n        const infoToUpdate = { ...tables[tableIndex][rowId] };\n        infoToUpdate.isRemoved = false;\n        this.updateTablesData({\n            ...tables, [tableIndex]: { ...tables[tableIndex], [rowId]: infoToUpdate }\n        });\n    }\n\n    public updatePersonInfo = (data: Person, tableIndex: string, rowId: string) => {\n        const tables = this.tables;\n        if (tableIndex && rowId) {\n            this.updateTablesData({\n                ...tables, [tableIndex]: { ...tables[tableIndex], [rowId]: data }\n            });\n        }\n    }\n\n    public addPerson = (data: Person) => {\n        const tableIndex = \"0\";\n        const tables = this.tables;\n        this.updateTablesData({\n            ...tables,\n            [tableIndex]: { ...tables[tableIndex], [this.getUniqueString()]: data }\n        });\n    }\n\n    public updateTablesData(data: Record<string, TableRows>) {\n        this.tables = data;\n        this.subscriber(data, this.tableIds);\n    }\n\n    /**\n     * only one subscriber is supported\n     */\n    public subscribe(callback: (data: Record<string, TableRows>, tablePositions: string[]) => void) {\n        this.subscriber = callback;\n    }\n}\n\n","import React from \"react\";\n\nimport { Person, TableRows } from \"./commonTypes\";\nimport { FillingForm, PopupForm } from \"./Form\";\nimport { mockedData, mockedTablesPositions } from \"./mockedData\";\nimport { Table } from \"./Table\";\nimport { TablesStore } from \"./TablesStore\";\n\nimport styles from \"./App.module.css\";\n\ntype AppState = {\n    tables: Record<string, TableRows>;\n    selectedPerson: Person | undefined;\n    selectedTable: string | undefined;\n    selectedRow: string | undefined;\n    removingTable: string | undefined;\n    removedTable: string | undefined;\n};\n\nexport class App extends React.Component<{}, AppState> {\n\n    state: AppState = {\n        tables: {},\n        selectedPerson: undefined,\n        selectedRow: undefined,\n        selectedTable: undefined,\n        removedTable: undefined,\n        removingTable: undefined,\n    }\n\n    private removeTimeoutIds: Record<string, number> = {};\n    private popupRef = React.createRef<HTMLDivElement>();\n    public store = new TablesStore();\n\n    public copyTable = (tableIndex: string) => {\n        this.store.copyTable(tableIndex);\n    }\n\n    public removeTable = (tableIndex: string) => {\n        this.setState({ removingTable: tableIndex });\n        setTimeout(() => {\n            // TODO: rework as \"confirm\" might not work in iframe\n            if (window.confirm(\"You pressed 'remove' for table. Are you sure?\")) {\n                this.setState({ removedTable: tableIndex });\n                setTimeout(() => {\n                    this.store.removeTable(tableIndex);\n                    this.setState({ removingTable: undefined, removedTable: undefined });\n                }, 1000);\n            } else {\n                this.setState({ removingTable: undefined });\n            }\n        }, 100);\n    }\n\n    public editRow = (tableIndex: string, rowId: string) => {\n        this.setState({\n            selectedPerson: this.state.tables[tableIndex][rowId],\n            selectedRow: rowId,\n            selectedTable: tableIndex,\n        });\n    }\n\n    public removeRow = (tableIndex: string, rowId: string) => {\n        this.store.markAsRemovedRow(tableIndex, rowId);\n\n        this.removeTimeoutIds[tableIndex + \"_\" + rowId] = window.setTimeout(() => {\n            this.store.removeRow(tableIndex, rowId);\n        }, 5000);\n    }\n\n    public cancelRemovingRow = (tableIndex: string, rowId: string) => {\n        window.clearInterval(this.removeTimeoutIds[tableIndex + \"_\" + rowId]);\n        delete this.removeTimeoutIds[tableIndex + \"_\" + rowId];\n\n        this.store.cancelRemovingRow(tableIndex, rowId);\n    }\n\n    public updatePersonInfo = (data: Person) => {\n        if (this.state.selectedTable && this.state.selectedRow) {\n            this.store.updatePersonInfo(data, this.state.selectedTable, this.state.selectedRow);\n            this.clearCurrent();\n        }\n    }\n\n    public addPerson = (data: Person) => {\n        this.store.addPerson(data);\n    }\n\n    public updateTablesData(data: Record<string, TableRows>, tableIds: string[]) {\n        this.setState({ tables: data });\n        localStorage.setItem(\"tablesData\", JSON.stringify(data));\n        localStorage.setItem(\"tablesPositions\", JSON.stringify(tableIds));\n    }\n\n    public handleClickOutsideOfPopup = (event: MouseEvent) => {\n        if (this.popupRef.current && !this.popupRef.current.contains(event.target as Element)) {\n            this.clearCurrent();\n        }\n    };\n\n    public handleEscape = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            this.clearCurrent();\n        }\n    };\n\n    public clearCurrent() {\n        this.setState({\n            selectedPerson: undefined,\n            selectedRow: undefined,\n            selectedTable: undefined\n        });\n    }\n\n    public componentDidMount() {\n        document.addEventListener(\"click\", this.handleClickOutsideOfPopup, true);\n        document.addEventListener(\"keyup\", this.handleEscape, true);\n\n        this.store.subscribe((data, tablePositions) => {\n            this.updateTablesData(data, tablePositions);\n        });\n\n        const positionsData = localStorage.getItem(\"tablesPositions\");\n        try {\n            if (positionsData !== null) {\n                this.store.tableIds = JSON.parse(positionsData) as string[]\n            } else {\n                this.store.tableIds = [...mockedTablesPositions];\n            }\n        } catch (e) {\n            console.error(e, positionsData);\n        }\n        const data = localStorage.getItem(\"tablesData\");\n        try {\n            if (data !== null) {\n                this.store.updateTablesData(JSON.parse(data) as Record<string, TableRows>);\n            } else {\n                this.store.updateTablesData(mockedData);\n            }\n        } catch (e) {\n            console.error(e, data);\n        }\n    }\n\n    public componentWillUnmount() {\n        document.removeEventListener(\"keyup\", this.handleEscape, true);\n        document.removeEventListener(\"click\", this.handleClickOutsideOfPopup, true);\n    }\n\n    public render() {\n        return (\n            <div className={styles.App}>\n                <div className={styles.InputWidget}>\n                    <FillingForm onSave={this.addPerson}/>\n                </div>\n                {this.store.getTableIds().map(tableIndex => (\n                    <div\n                        className={\n                            styles.TableWidget +\n                            (tableIndex === this.state.removedTable ? \" \" + styles.RemovedTable : \"\") +\n                            (tableIndex === this.state.removingTable ? \" \" + styles.RemovingTable: \"\")\n                        }\n                        key={tableIndex}\n                    >\n                        <Table\n                            activeRecord={tableIndex === this.state.selectedTable ? this.state.selectedRow : undefined}\n                            tableIndex={tableIndex}\n                            data={this.state.tables[tableIndex]}\n                            copyTable={this.copyTable}\n                            removeTable={this.removeTable}\n                            editRow={this.editRow}\n                            removeRow={this.removeRow}\n                            cancelRemovingRow={this.cancelRemovingRow}\n                        />\n                    </div>))}\n                <div ref={this.popupRef}>\n                    <PopupForm onSave={this.updatePersonInfo} data={this.state.selectedPerson}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Table_tableContainer__2W1O8\",\"tableHeader\":\"Table_tableHeader__13qib\",\"tableHeader__button_copy\":\"Table_tableHeader__button_copy__3y7Yx\",\"tableHeader__button_remove\":\"Table_tableHeader__button_remove__1tjks\",\"tableContent\":\"Table_tableContent__1SkAc\",\"tableContent__header\":\"Table_tableContent__header__3ttZ7\",\"tableContent__link\":\"Table_tableContent__link__3k6Xe\",\"tableContent__row_selected\":\"Table_tableContent__row_selected__-shi1\",\"tableContent__row_removed\":\"Table_tableContent__row_removed__2QJBw\",\"rowRemovingKeyframes\":\"Table_rowRemovingKeyframes__3zaqY\",\"tableContent__link_blue\":\"Table_tableContent__link_blue__39JwF\",\"tableContent__link_red\":\"Table_tableContent__link_red__2ROtg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fillingForm\":\"Form_fillingForm__17S72\",\"popup\":\"Form_popup__k_6JJ\",\"formElement\":\"Form_formElement__3zCLx\",\"confirmButton\":\"Form_confirmButton__31o8Y\",\"submitButton\":\"Form_submitButton__SwjOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"TableWidget\":\"App_TableWidget__27GmQ\",\"InputWidget\":\"App_InputWidget__3AHhj\",\"RemovingTable\":\"App_RemovingTable__1Ayl1\",\"RemovedTable\":\"App_RemovedTable__3F77U\",\"removeTableKeyframe\":\"App_removeTableKeyframe__3vImm\"};"],"sourceRoot":""}